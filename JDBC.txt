Telusko (https://www.youtube.com/watch?v=y_YxwyYRJek&list=PLsyeobzWxl7rU7Jz3zDRpqB-EODzBbHOI)
1)JDBC(Java database conectivity).
2)connecting our java app with DB we need jdbc.
3)7 steps to connect DB: (add jar)
	a) Import package (java.sql)
	b) i) Load the driver (depends on driver lke there is oracle,mysql etc) ii) register the driver (call forName())
	c) Establish the connection (implement Connection interface)
	d) Create the statement (statement,PreparedStatement,CollableStatement)
	e) Execute the query
	f) Process result
	g) Close connection
	
4)There are 4 ypes of SQL command DDL,DML,DCL and TCL.
5)Data Definition Language (DDL) 
	Is short name of Data Definition Language, which deals with database schemas and descriptions, of how the 
	data should reside in the database.

		CREATE - to create a database and its objects like (table, index, views, store procedure, function, and triggers)
		ALTER - alters the structure of the existing database
		DROP - delete objects from the database
		TRUNCATE - remove all records from a table, including all spaces allocated for the records are removed
		COMMENT - add comments to the data dictionary
		RENAME - rename an object
6)Data Manipulation Language (DML) SHOULD USE executeUpdate() METHOD 
	Is short name of Data Manipulation Language which deals with data manipulation and includes most common 
	SQL statements such SELECT, INSERT, UPDATE, DELETE, etc., and it is used to store, modify, retrieve, delete and update 
	data in a database.

	SELECT - retrieve data from a database
	INSERT - insert data into a table
	UPDATE - updates existing data within a table
	DELETE - Delete all records from a database table
	MERGE - UPSERT operation (insert or update)
	CALL - call a PL/SQL or Java subprogram
	EXPLAIN PLAN - interpretation of the data access path
	LOCK TABLE - concurrency Control
	
7)Data Query Language (DQL) SHOULD USE executeQuery() METHOD

	The commands of SQL that are used to retrieve data from the database are collectively called as DQL. 
	So all Select statements comes under DQL.
	
8)we use forName() to load the driver/class. Static block is executed when class is loaded.
https://www.youtube.com/watch?v=me9CcSXLHHc (forname explanation)

actual process to load driver:
	DriverManager.registerDriver(new com.mysql.jdbc.Driver())
	
But we can load it by simply calling forName() :
	Class.forName("com.mysql.jdbc.Driver"); this will load the driver as Driver class has static block which will do same
	thing as shown above.
	so forName just loads the driver.
	
9)we are using sql management studio

	create a simple java project.
	I downloded from maveen repository mssql-jdbc-7.4.1.jre8 else i was getting version error.
	Go to properties -> java build path -> add external jar -> add downloaded jar.
	
10)To work with predefined queries we need prepared statement. For ex we can store values in var then use it in queries but
	What if there are 10 variables, in this case use prepared statement.
	
	Inside main:
		import java.sql.*;

public class fetchDataSample {

	public static void main(String args[]) throws Exception {

		String url = "jdbc:sqlserver://BLRDEVSQLDB002:1433;instanceName=SQLSERVER2012;databaseName=314_PLT_DEV_MART;";
		String userName = "mas";
		String password = "Welcome1";

		Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
		Connection con = DriverManager.getConnection(url, userName, password);
		Statement st = con.createStatement();

		//DCL,DDL
		/*String query = "select cust_name from Bank_customer where cust_id=1";
		ResultSet rs = st.executeQuery(query);
		
		while(rs.next()) {
			System.out.println(rs.getString(1));
		}*/
		 
		//DML
		/*String query1 = "select max(cust_id) from Bank_customer";
		ResultSet rs = st.executeQuery(query1);
		rs.next();
		int val = rs.getInt(1)+1;
		String query = "insert into Bank_customer values ("+val+",1,'abcdef',NULL,NULL,'sav',12345,27,12)";
		int count = st.executeUpdate(query);
		System.out.println(count);

		st.close();
		con.close();*/
		
		//DCL,DDL
		/*String query = "select * from Bank_customer";
		ResultSet rs = st.executeQuery(query);

		while (rs.next()) {
			System.out.println(rs.getInt(1) +" "+ rs.getInt(2) +" "+ rs.getString(3));
		}*/
		
		//prepared statement
		//DML
		String query = "insert into Bank_customer values (?,1,?,NULL,NULL,'sav',12345,27,12)";
		PreparedStatement pt = con.prepareStatement(query);
		
		String query1 = "select max(cust_id) from Bank_customer";
		ResultSet rs = st.executeQuery(query1);
		rs.next();
		int val = rs.getInt(1) + 1;
		
		pt.setInt(1, val);
		pt.setString(2, "abcdef");
		int count = pt.executeUpdate();
		System.out.println(count);

		st.close();
		con.close();
	}
	
	output:
		1
		
DAO (data access object)
DTO (data Transfer Object)

we cant map object to DB in JDBC so we use jpa. In jdbc we have to fetch each element and then store into DB but in 
hibernate we can fetch all elements and store in DB.