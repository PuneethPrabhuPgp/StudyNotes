2D :

1)CSS transforms allow you to move, rotate, scale, and skew elements.
2)Some older browsers (IE 9) need specific prefixes (-ms-) to understand the 2D transform properties.
3)With the CSS transform property you can use the following 2D transformation methods:

	translate()
	rotate()
	scaleX()
	scaleY()
	scale()
	skewX()
	skewY()
	skew()
	matrix()
	
4)The translate() Method :
	The translate() method moves an element from its current position (according to the parameters given for the X-axis and the Y-axis).
	
5)The rotate() method rotates an element clockwise or counter-clockwise according to a given degree.
	positive value for clock wise.
	Using negative values will rotate the element counter-clockwise.
	
6)The scale() method increases or decreases the size of an element (according to the parameters given for the width and height).If u give 1 
value it will be applied for both X and Y.

	The scaleX() method increases or decreases the width of an element.
	The scaleY() method increases or decreases the height of an element.
	
7)The skewX() method skews an element along the X-axis by the given angle.
	The skewY() method skews an element along the Y-axis by the given angle.
	The skew() method skews an element along the X and Y-axis by the given angles. If u give 1 value it will be applied for only X.
	
8)The matrix() method combines all the 2D transform methods into one.

	The matrix() method take six parameters, containing mathematic functions, which allows you to rotate, scale, move (translate), and skew elements.
	The parameters are as follow: matrix(scaleX(),skewY(),skewX(),scaleY(),translateX(),translateY())
	
	
	.box{
    width:200px;
    height:300px;
    background-color: pink;
    /*transform: translate(500px,100px);
    transform: rotate(20deg); 
    transform: rotate(-20deg);
    transform: scale(2,3);
    transform: scale(0.5,0.5);
    transform: scaleX(0.5);
    transform: scaleY(0.5);
    transform: skewX(20deg);
    transform: skewY(20deg);
    transform: skew(20deg,20deg);*/
    transform: matrix(0.5, 1, 1, 0.5, 500, 100);
}

3D:

9)With the CSS transform property you can use the following 3D transformation methods:

	rotateX()
	rotateY()
	rotateZ()
	
	.box3d{
		width:200px;
		height:300px;
		background-color: red;
		transform: rotateX(150deg);
		transform: rotateY(150deg);
		transform: rotateZ(90deg)
	}
	
	
	Function								Description
matrix3d
(n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n)			Defines a 3D transformation, using a 4x4 matrix of 16 values
translate3d(x,y,z)							Defines a 3D translation
translateX(x)								Defines a 3D translation, using only the value for the X-axis
translateY(y)								Defines a 3D translation, using only the value for the Y-axis
translateZ(z)								Defines a 3D translation, using only the value for the Z-axis
scale3d(x,y,z)								Defines a 3D scale transformation
scaleX(x)									Defines a 3D scale transformation by giving a value for the X-axis
scaleY(y)									Defines a 3D scale transformation by giving a value for the Y-axis
scaleZ(z)									Defines a 3D scale transformation by giving a value for the Z-axis
rotate3d(x,y,z,angle)						Defines a 3D rotation
rotateX(angle)								Defines a 3D rotation along the X-axis
rotateY(angle)								Defines a 3D rotation along the Y-axis
rotateZ(angle)								Defines a 3D rotation along the Z-axis
perspective(n)								Defines a perspective view for a 3D transformed element


transform-origin:
	
		transform-origin: x y;  always transform begins from center use  this to customise. ex: transform-origin:10px 10px;
		
		The transform-origin property allows you to change the position of transformed elements.
		2D transformations can change the x- and y-axis of an element. 3D transformations can also change the z-axis of an element.
	
transform-style: (c image in w3school for clear understanding, in 3d the 2nd child is visible and 1st will hide)
	
			The transform-style property specifies how nested elements are rendered in 3D space.
			
			ex: transform-style: preserve-3d;
			flat			Specifies that child elements will NOT preserve its 3D position. This is default
			preserve-3d		Specifies that child elements will preserve its 3D position
			initial	Sets 	this property to its default value. Read about initial
			inherit			Inherits this property from its parent element. Read about inherit